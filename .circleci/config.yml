version: 2.1

executors:
  golang:
    docker:
      - image: 'quay.io/influxdb/telegraf-ci:1.13.8'
    working_directory: '/go/src/github.com/influxdata/telegraf'
    environment:
      GOFLAGS: -p=8
  dockerizer:
    docker:
      - image: circleci/golang:1.14.4
    environment:
      IMAGE_NAME: filecoin/sentinel-drone

jobs:
  test:
    executor: golang
    steps:
      - checkout
      - run: apt-get update
      - run: apt-get install -y jq mesa-opencl-icd ocl-icd-opencl-dev
      - restore_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
      - run: 'make deps'
      - run: 'make tidy'
      - save_cache:
          name: 'go module cache'
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - '/go/pkg/mod'
      - run: 'make'
      - run: 'make check'
      - run: 'make check-deps'
      - run: 'make test'

  docker-build:
    executor: dockerizer
    steps:
      - checkout
      - setup_remote_docker:
          version: "18.09.3"
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME .
      - run:
          name: Archive Docker image
          command: docker save -o docker-image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./docker-image.tar

  docker-push:
    executor: dockerizer
    steps:
      - checkout
      - setup_remote_docker:
          version: "18.09.3"
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/docker-image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            ./scripts/push-docker-tags.sh "$IMAGE_NAME" "$CIRCLE_SHA1" "$CIRCLE_BRANCH" "$CIRCLE_TAG"


workflows:
  version: 2
  check:
    jobs:
      - test
      - docker-build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+(-rc[0-9]+)*/  # incl v0.0.0 or v0.0.0-rc0
      - docker-push:
          requires:
            - docker-build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+(-rc[0-9]+)*/  # incl v0.0.0 or v0.0.0-rc0
